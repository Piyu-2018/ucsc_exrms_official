{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization'; // This object is not Partial<PickersLocaleText> because it is the default values\n\nconst enUSPickers = {\n  // Calendar navigation\n  previousMonth: 'Previous month',\n  nextMonth: 'Next month',\n  // View navigation\n  openPreviousView: 'open previous view',\n  openNextView: 'open next view',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view',\n  // DateRange placeholders\n  start: 'Start',\n  end: 'End',\n  // Action bar\n  cancelButtonLabel: 'Cancel',\n  clearButtonLabel: 'Clear',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Today',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'No time selected' : `Selected time is ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} hours`,\n  minutesClockNumberText: minutes => `${minutes} minutes`,\n  secondsClockNumberText: seconds => `${seconds} seconds`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose date, selected date is ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Choose date',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose time, selected time is ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Choose time',\n  // Table labels\n  timeTableLabel: 'pick time',\n  dateTableLabel: 'pick date'\n};\nexport const DEFAULT_LOCALE = enUSPickers;\nexport const enUS = getPickersLocalization(enUSPickers);","map":{"version":3,"names":["getPickersLocalization","enUSPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","clockLabelText","time","adapter","format","hoursClockNumberText","hours","minutesClockNumberText","minutes","secondsClockNumberText","seconds","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","DEFAULT_LOCALE","enUS"],"sources":["E:/ucsc_exrms_official/node_modules/@mui/x-date-pickers/locales/enUS.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\n// This object is not Partial<PickersLocaleText> because it is the default values\nconst enUSPickers = {\n  // Calendar navigation\n  previousMonth: 'Previous month',\n  nextMonth: 'Next month',\n  // View navigation\n  openPreviousView: 'open previous view',\n  openNextView: 'open next view',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'year view is open, switch to calendar view' : 'calendar view is open, switch to year view',\n  // DateRange placeholders\n  start: 'Start',\n  end: 'End',\n  // Action bar\n  cancelButtonLabel: 'Cancel',\n  clearButtonLabel: 'Clear',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Today',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Select ${view}. ${time === null ? 'No time selected' : `Selected time is ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} hours`,\n  minutesClockNumberText: minutes => `${minutes} minutes`,\n  secondsClockNumberText: seconds => `${seconds} seconds`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose date, selected date is ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Choose date',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Choose time, selected time is ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Choose time',\n  // Table labels\n  timeTableLabel: 'pick time',\n  dateTableLabel: 'pick date'\n};\nexport const DEFAULT_LOCALE = enUSPickers;\nexport const enUS = getPickersLocalization(enUSPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC,C,CACA;;AACA,MAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,gBAFG;EAGlBC,SAAS,EAAE,YAHO;EAIlB;EACAC,gBAAgB,EAAE,oBALA;EAMlBC,YAAY,EAAE,gBANI;EAOlBC,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAT,GAAkB,4CAAlB,GAAiE,4CAP7F;EAQlB;EACAC,KAAK,EAAE,OATW;EAUlBC,GAAG,EAAE,KAVa;EAWlB;EACAC,iBAAiB,EAAE,QAZD;EAalBC,gBAAgB,EAAE,OAbA;EAclBC,aAAa,EAAE,IAdG;EAelBC,gBAAgB,EAAE,OAfA;EAgBlB;EACAC,cAAc,EAAE,CAACP,IAAD,EAAOQ,IAAP,EAAaC,OAAb,KAA0B,UAAST,IAAK,KAAIQ,IAAI,KAAK,IAAT,GAAgB,kBAAhB,GAAsC,oBAAmBC,OAAO,CAACC,MAAR,CAAeF,IAAf,EAAqB,UAArB,CAAiC,EAAE,EAjBtI;EAkBlBG,oBAAoB,EAAEC,KAAK,IAAK,GAAEA,KAAM,QAlBtB;EAmBlBC,sBAAsB,EAAEC,OAAO,IAAK,GAAEA,OAAQ,UAnB5B;EAoBlBC,sBAAsB,EAAEC,OAAO,IAAK,GAAEA,OAAQ,UApB5B;EAqBlB;EACAC,sBAAsB,EAAE,CAACC,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,GAAmD,iCAAgCC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA+C,EAAlI,GAAsI,aAtBjK;EAuBlBI,sBAAsB,EAAE,CAACJ,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,GAAmD,iCAAgCC,KAAK,CAACT,MAAN,CAAaS,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA+C,EAAlI,GAAsI,aAvBjK;EAwBlB;EACAK,cAAc,EAAE,WAzBE;EA0BlBC,cAAc,EAAE;AA1BE,CAApB;AA4BA,OAAO,MAAMC,cAAc,GAAG/B,WAAvB;AACP,OAAO,MAAMgC,IAAI,GAAGjC,sBAAsB,CAACC,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}