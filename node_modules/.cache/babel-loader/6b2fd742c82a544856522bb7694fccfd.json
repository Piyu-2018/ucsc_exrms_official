{"ast":null,"code":"import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'las horas',\n  minutes: 'los minutos',\n  seconds: 'los segundos'\n}; // This object is not Partial<PickersLocaleText> because it is the default values\n\nconst esESPickers = {\n  // Calendar navigation\n  previousMonth: 'Último mes',\n  nextMonth: 'Próximo mes',\n  // View navigation\n  openPreviousView: 'abrir la última vista',\n  openNextView: 'abrir la siguiente vista',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'la vista del año está abierta, cambie a la vista de calendario' : 'la vista de calendario está abierta, cambie a la vista del año',\n  // DateRange placeholders\n  start: 'Empezar',\n  end: 'Terminar',\n  // Action bar\n  cancelButtonLabel: 'Cancelar',\n  clearButtonLabel: 'Limpia',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Hoy',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Seleccione ${views[view]}. ${time === null ? 'Sin tiempo seleccionado' : `El tiempo seleccionado es ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} horas`,\n  minutesClockNumberText: minutes => `${minutes} minutos`,\n  secondsClockNumberText: seconds => `${seconds} segundos`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Elige la fecha, la fecha elegida es ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Elige la fecha',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Elige la hora, la hora elegido es ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Elige la hora',\n  // Table labels\n  timeTableLabel: 'elige la fecha',\n  dateTableLabel: 'elige la hora'\n};\nexport const esES = getPickersLocalization(esESPickers);","map":{"version":3,"names":["getPickersLocalization","views","hours","minutes","seconds","esESPickers","previousMonth","nextMonth","openPreviousView","openNextView","calendarViewSwitchingButtonAriaLabel","view","start","end","cancelButtonLabel","clearButtonLabel","okButtonLabel","todayButtonLabel","clockLabelText","time","adapter","format","hoursClockNumberText","minutesClockNumberText","secondsClockNumberText","openDatePickerDialogue","rawValue","utils","isValid","date","openTimePickerDialogue","timeTableLabel","dateTableLabel","esES"],"sources":["E:/ucsc_exrms_official/node_modules/@mui/x-date-pickers/locales/esES.js"],"sourcesContent":["import { getPickersLocalization } from './utils/getPickersLocalization';\nconst views = {\n  hours: 'las horas',\n  minutes: 'los minutos',\n  seconds: 'los segundos'\n}; // This object is not Partial<PickersLocaleText> because it is the default values\n\nconst esESPickers = {\n  // Calendar navigation\n  previousMonth: 'Último mes',\n  nextMonth: 'Próximo mes',\n  // View navigation\n  openPreviousView: 'abrir la última vista',\n  openNextView: 'abrir la siguiente vista',\n  calendarViewSwitchingButtonAriaLabel: view => view === 'year' ? 'la vista del año está abierta, cambie a la vista de calendario' : 'la vista de calendario está abierta, cambie a la vista del año',\n  // DateRange placeholders\n  start: 'Empezar',\n  end: 'Terminar',\n  // Action bar\n  cancelButtonLabel: 'Cancelar',\n  clearButtonLabel: 'Limpia',\n  okButtonLabel: 'OK',\n  todayButtonLabel: 'Hoy',\n  // Clock labels\n  clockLabelText: (view, time, adapter) => `Seleccione ${views[view]}. ${time === null ? 'Sin tiempo seleccionado' : `El tiempo seleccionado es ${adapter.format(time, 'fullTime')}`}`,\n  hoursClockNumberText: hours => `${hours} horas`,\n  minutesClockNumberText: minutes => `${minutes} minutos`,\n  secondsClockNumberText: seconds => `${seconds} segundos`,\n  // Open picker labels\n  openDatePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Elige la fecha, la fecha elegida es ${utils.format(utils.date(rawValue), 'fullDate')}` : 'Elige la fecha',\n  openTimePickerDialogue: (rawValue, utils) => rawValue && utils.isValid(utils.date(rawValue)) ? `Elige la hora, la hora elegido es ${utils.format(utils.date(rawValue), 'fullTime')}` : 'Elige la hora',\n  // Table labels\n  timeTableLabel: 'elige la fecha',\n  dateTableLabel: 'elige la hora'\n};\nexport const esES = getPickersLocalization(esESPickers);"],"mappings":"AAAA,SAASA,sBAAT,QAAuC,gCAAvC;AACA,MAAMC,KAAK,GAAG;EACZC,KAAK,EAAE,WADK;EAEZC,OAAO,EAAE,aAFG;EAGZC,OAAO,EAAE;AAHG,CAAd,C,CAIG;;AAEH,MAAMC,WAAW,GAAG;EAClB;EACAC,aAAa,EAAE,YAFG;EAGlBC,SAAS,EAAE,aAHO;EAIlB;EACAC,gBAAgB,EAAE,uBALA;EAMlBC,YAAY,EAAE,0BANI;EAOlBC,oCAAoC,EAAEC,IAAI,IAAIA,IAAI,KAAK,MAAT,GAAkB,gEAAlB,GAAqF,gEAPjH;EAQlB;EACAC,KAAK,EAAE,SATW;EAUlBC,GAAG,EAAE,UAVa;EAWlB;EACAC,iBAAiB,EAAE,UAZD;EAalBC,gBAAgB,EAAE,QAbA;EAclBC,aAAa,EAAE,IAdG;EAelBC,gBAAgB,EAAE,KAfA;EAgBlB;EACAC,cAAc,EAAE,CAACP,IAAD,EAAOQ,IAAP,EAAaC,OAAb,KAA0B,cAAanB,KAAK,CAACU,IAAD,CAAO,KAAIQ,IAAI,KAAK,IAAT,GAAgB,yBAAhB,GAA6C,6BAA4BC,OAAO,CAACC,MAAR,CAAeF,IAAf,EAAqB,UAArB,CAAiC,EAAE,EAjBjK;EAkBlBG,oBAAoB,EAAEpB,KAAK,IAAK,GAAEA,KAAM,QAlBtB;EAmBlBqB,sBAAsB,EAAEpB,OAAO,IAAK,GAAEA,OAAQ,UAnB5B;EAoBlBqB,sBAAsB,EAAEpB,OAAO,IAAK,GAAEA,OAAQ,WApB5B;EAqBlB;EACAqB,sBAAsB,EAAE,CAACC,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,GAAmD,uCAAsCC,KAAK,CAACN,MAAN,CAAaM,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA+C,EAAxI,GAA4I,gBAtBvK;EAuBlBI,sBAAsB,EAAE,CAACJ,QAAD,EAAWC,KAAX,KAAqBD,QAAQ,IAAIC,KAAK,CAACC,OAAN,CAAcD,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAd,CAAZ,GAAmD,qCAAoCC,KAAK,CAACN,MAAN,CAAaM,KAAK,CAACE,IAAN,CAAWH,QAAX,CAAb,EAAmC,UAAnC,CAA+C,EAAtI,GAA0I,eAvBrK;EAwBlB;EACAK,cAAc,EAAE,gBAzBE;EA0BlBC,cAAc,EAAE;AA1BE,CAApB;AA4BA,OAAO,MAAMC,IAAI,GAAGjC,sBAAsB,CAACK,WAAD,CAAnC"},"metadata":{},"sourceType":"module"}